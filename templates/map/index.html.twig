{% extends 'clean.html.twig' %}

{% block title %}Carte pour trouver une borne!{% endblock %}

{% block content %}
<!-- Page Header-->
        <header class="masthead" style="background-image: url('{{asset('clean/assets/img/carte-bg.jpg')}}')">
            <div class="container position-relative px-4 px-lg-5">
                <div class="row gx-4 gx-lg-5 justify-content-center">
                    <div class="col-md-10 col-lg-8 col-xl-7">
                        <div class="site-heading">
                            <h1>Trouver une borne</h1>
                            <span class="subheading"></span>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <div id="map"></div> 

        <!-- Fichiers Javascript -->
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>
        <script src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"></script>
        <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
        <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>

        
        {# On initialise la carte #}
        <script>
            var map = L.map('map').setView([48.852969, 2.349903], 13);

            // on charge les "tuiles"
            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
    

            var chargingStations = {{ stations|json_encode|raw }};
            //l'extension MarkerCluster qui permet de regrouper les marqueurs proches les uns des autres pour améliorer la lisibilité de la carte.
            var markers = new L.MarkerClusterGroup();

            chargingStations.results.forEach(function(station) {
                var lat = station.ylatitude; // Chemin pour la latitude
                var lon = station.xlongitude; // Chemin pour la longitude

                markers.addLayer(L.marker([lat, lon])
                .bindPopup(station.n_station)
                .addTo(map));
            });
            map.addLayer(markers);

            //On active la gestion d'itinéraire
            L.Routing.control({
            geocoder: L.Control.Geocoder.nominatim(),
               // Nous personnalisons la langue et le moyen de transport
                router: new L.Routing.osrmv1({
                language: 'fr',
                profile: 'car', // car, bike, foot
                })
            }).addTo(map);

        </script>


{% endblock %}
